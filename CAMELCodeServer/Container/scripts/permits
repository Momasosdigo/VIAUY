#!/bin/bash

#############################
## Zona de auto debugging ##
#[+][+][+][+][+][+][+][+][+][+][+][+]#
handleError() {
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [ERROR]=> LINEA $1; Script error $0 \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [Codigo error $2 ]                        \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    exit 1
}
trap 'handleError $LINENO $?' ERR
trap "echo [x] Que forma mas arcaica de salir, se implementaron funciones modernas para ello [x]; exit" SIGINT
#[+][+][+][+][+][+][+][+][+][+][+][+]#

###############
## PERMISOS ##
##############
function permits () { clear
    ##### Declaracion de variables a utilizar
    declare -i permUser
    declare -i permGrup
    declare -i permOtros
    #####
    echo -e "\e[0;36m[+]==========================================================[+]\e[0m"
    echo -e "\e[0;36m[\e[0m                      \033[1;91mPermisos de archivos                    \e[0;36m]\e[0m"
    echo -e "\e[0;36m[+]==========================================================[+]\e[0m"
    echo -e "\e[0;36m|\e[0m  Recuerde que para cada propietario (\033[4;37musuario\e[0m, \033[4;37mgrupo\e[0m, \033[4;37motros\e[0m)  \e[0;36m|\e[0m"
    echo -e "\e[0;36m|\e[0m  los numeros de permisos deben estar entre \033[1;32m[0]\e[0m y \033[1;32m[7]\e[0m         \e[0;36m|\e[0m"
    echo -e "\e[0;36m|\e[0m  una ves puesto el nombre del archivo cual desea modificar   \e[0;36m|\e[0m"
    echo -e "\e[0;36m[+]==========================================================[+]\e[0m\n"
    read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nombre de usuario => " nameFolder

    if [  -f "$nameFolder" ]; then
        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Ingrese permisos para usuario => " permUser

    elif [ "$permUser" -le 7  ]; then
        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Ingrese permisos para grupo => " permGrup

    elif [ "$permGrup" -le 7  ]; then
        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Ingrese permisos para otros => " permOtros

    elif [ "$permOtros" -le 7  ]; then
        chmod "$permUser""$permGrup""$permOtros" "$nameFolder"
        echo -e "\e[0;36m[+]\e[0m Ha modificado \033[46mexitosamente\033[0m los permisos del archivo ""$nameFolder"" \e[0;36m[+]\e[0m"
        read -n1 -p -r "Presione cualquier tecla para [ CONTINUAR ]..."
        unset "$permUser"
        unset "$permGrup"
        unset "$permOtros"
        unset "$nameFolder"
        ( exec "./main.sh" ) && clear
        #Con el comando [ exec ] reemplaza al Shell sin crear un nuevo proceso. 
        #Sin embargo, podemos ponerlo en una SubShell, la cual usara 
        #un porcentaje de procesador y ram, para usar esto es 
        #quitando el comando [ exec ] y dejando solo los paréntesis y el path del main:
        #[ ( "./main.sh" ) ].
        #(La segunda opción es buena idea usarla en caso que se dese ejecutar tareas pesadas)
    else
        echo -e "\033[4;35mEl archivo o los permisos no son validos\e[0m"
        echo
        sleep 1s
        clear
        ( exec "./main.sh" )
    fi
}

permits
