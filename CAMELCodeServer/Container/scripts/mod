#!/bin/bash 
#############################
## Zona de auto debugging ##
#[+][+][+][+][+][+][+][+][+][+][+][+]#
handleError() {
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [ERROR]=> LINEA $1; Script error $0 \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [Codigo error $2 ]                        \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    exit 1
}
trap 'handleError $LINENO $?' ERR
trap "echo [x] Que forma mas arcaica de salir, se implementaron funciones modernas para ello [x]; exit" SIGINT
#[+][+][+][+][+][+][+][+][+][+][+][+]#


################################
## MODIFICACION DE USUARIOS ##
#############################
function modUser() { clear
    ##### Declaracion de variables a utilizar
    declare -i usMod
    #####
    echo -e "\n\e[0;36m[+]==============================[+]\e[0m"
    echo -e "\e[0;36m|\e[0m     \033[1;91mModificacion de Usuarios     \e[0;36m|\e[0m"
    echo -e "\e[0;36m[+]==============================[+]\e[0m"
    echo
    read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nombre de usuario => " modUser
    usMod=$(cat /etc/passwd | grep -c -w -i "$modUser" | cut -d ":" -f1)

    if [ "$usMod" -eq 0 ]; then
        echo -e "\033[4;35mEl usuario especificado no existe\e[0m"
        echo
        sleep 1s
        clear
        [ "$opUser_Grup" = true ]
    else
        echo -e "\n\e[0;36m[+]=====================================[+]\e[0m"
        echo -e "\e[0;36m|\e[0m     \033[1;91mModificacion nombre de Usuarios     \e[0;36m|\e[0m"
        echo -e "\e[0;36m[+]=====================================[+]\e[0m"
        echo

        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nuevo nombre => " newName
        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Antiguo nombre => " oldName
        usermod -l "$newName" "$oldName"
        sleep 1s &&

        echo -e "\n\e[0;36m[+]=========================================[+]\e[0m"
        echo -e "\e[0;36m|\e[0m     \033[1;91mModificacion contraseña de Usuarios     \e[0;36m|\e[0m"
        echo -e "\e[0;36m[+]=========================================[+]\e[0m"
        echo

        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nuevo nombre => " newPassword
        passwd "$newPassword"
        sleep 1s 

        echo -e "\e[0;36m[+]\e[0m El usuario ""$modUser"" ha sido \033[46mexitosamente\033[0m modificado \e[0;36m[+]\e[0m"
        read -n1 -p -r "Presione cualquier tecla para [ CONTINUAR ]..."
        [ "$opUser_Grup" = true ]
        clear
        #?Cambio grupo principal y agregar a secundario, darlo de vaja de un grupo secundario
    fi
}

#############################
## MODIFICACION DE GRUPOS ##
###########################
function modGroup () { clear
    ##### Declaracion de variables a utilizar
    declare -i grMod
    #####

    echo -e "\n\e[0;36m[+]============================[+]\e[0m"
    echo -e "\e[0;36m|\e[0m     \033[1;91mModificacion de Grupos     \e[0;36m|\e[0m"
    echo -e "\e[0;36m[+]============================[+]\e[0m"
    echo
    read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nombre de grupo => " oldGroup
    grMod=$(cat /etc/group | grep -c -w -i "$oldGroup" | cut -d ":" -f1)

    if [ "$grMod" -eq 0 ]; then
        echo -e "\033[4;35mEl grupo especificado no existe\e[0m"
        echo
        sleep 1s
        clear
        [ "$opUser_Grup" = true ]
    else
        echo -e "\e[0;36m[+]=============================[+]\e[0m"
        echo -e "\e[0;36m|\e[0m     \033[1;91mCambiar nombre de Grupo     \e[0;36m|\e[0m"
        echo -e "\e[0;36m[+]=============================[+]\e[0m"
        echo

        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nuevo nombre de grupo para ""$oldGroup"" => " newGroup
        groupmod -n "$newGroup" "$oldGroup"
        sleep 2s && clear

        #TODO: Quitar usuario de grupo
        echo -e "\e[0;36m[+]============================[+]\e[0m"
        echo -e "\e[0;36m|\e[0m     \033[1;91mQuitar usario de Grupo     \e[0;36m|\e[0m"
        echo -e "\e[0;36m[+]============================[+]\e[0m"
        echo

        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nombre del usuario a quitar del grupo => " grupUserName
        read -r -p "$(echo -e "\e[0;36m[+]\e[0m") Nombre del grupo del cual desea quitarlo => " userNameGrup
        gpasswd -d "$grupUserName" "$userNameGrup"
        sleep 1s && clear

        echo -e "\e[0;36m[+]\e[0m El grupo ""$oldGroup"" ha sido \033[46mexitosamente\033[0m modificado \e[0;36m[+]\e[0m"
        read -n1 -p -r "Presione cualquier tecla para [ CONTINUAR ]..."
        [ "$opUser_Grup" = true ]
        clear
    fi
}

while [ "$opUser_Grup" != 3 ]; do
    echo -e "\e[0;36m[+]===================[+]\e[0m"
    echo -e "\e[0;36m|\e[0m 1. Modificar Usuarios \e[0;36m|\e[0m"
    echo -e "\e[0;36m|\e[0m 2. Modificar Grupos   \e[0;36m|\e[0m"
    echo -e "\e[0;36m|\e[0m 3. \033[0;101m\033[1;97mVolver\033[0m             \e[0;36m|\e[0m"
    echo -e "\e[0;36m[+]===================[+]\e[0m"
    read -r -p "=> " opUser_Grup
    echo

    case "${opUser_Grup}" in
        1)
            modUser
        ;;

        2)
            modGroup
        ;;

        3)
            unset "$opUser_Grup" #[ unset ] borra la variable en memoria al salir de la funcion. 
            unset "$oldGroup"
            unset "$grupUserName"
            unset "$userNameGrup"
            ( exec "./main.sh" )
            #Con el comando [ exec ] reemplaza al Shell sin crear un nuevo proceso. 
            #Sin embargo, podemos ponerlo en una SubShell, la cual usara 
            #un porcentaje de procesador y ram, para usar esto es 
            #quitando el comando [ exec ] y dejando solo los paréntesis y el path del main:
            #[ ( "./main.sh" ) ].
            #(La segunda opción es buena idea usarla en caso que se dese ejecutar tareas pesadas)
        ;;

        *)
            clear
            echo
            echo -e "\033[4;35mNo es una opcion lo que intentas\e[0m"
            echo
            sleep 2s
            clear
            [ "${opUser_Grup}" = true ]
        ;;
    esac
done