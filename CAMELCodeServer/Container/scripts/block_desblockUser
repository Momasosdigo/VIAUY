#!/bin/bash
#############################
## Zona de auto debugging ##
#[+][+][+][+][+][+][+][+][+][+][+][+]#
handleError() {
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [ERROR]=> LINEA $1; Script error $0 \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m [Codigo error $2 ]                        \033[1;31m[+]\e[0m"
    echo -e "\033[1;31m[+]\e[0m\e[0;36m============================================\e[0m\033[1;31m[+]\e[0m"
    exit 1
}
trap 'handleError $LINENO $?' ERR
trap "echo [x] Que forma mas arcaica de salir, se implementaron funciones modernas para ello [x]; exit" SIGINT
#[+][+][+][+][+][+][+][+][+][+][+][+]#


########################
## BLOQUEAR USUARIOS ##
######################
function blockUser() { clear
    echo -e "\e[0;36m[x]===================================[x]\e[0m"
    echo -e "\e[0;36m[x]\e[0m         \033[1;91m\033[5m\033[3mBloquear Usuarios\033[0m         \e[0;36m[x]\e[0m"
    echo -e "\e[0;36m[x]===================================[x]\e[0m"
    echo
    blockUs=0

    while [ $blockUs == "0" ]; do
        read -r -p "Nombre de usuario => " blockUser
        aux3=$( cat /etc/passwd | grep $blockUser | cut -d ":" -f1 )
        
        if [ -z $aux3 ]; then
            blockUs=0
            echo -e "\033[4;35mEl usuario no es validos\e[0m"
            echo
            sleep 1s
            clear
            [ "${opUser_Grup}" = true ]
        else
            blockUs=1
            usermod -L $blockUser
            echo -e "\e[0;36m[+]\e[0m Se ha bloqueado \033[46mexitosamente\033[0m el usuario ""$blockUser"" \e[0;36m[+]\e[0m"
            read -n1 -p -r "Presione cualquier tecla para [ CONTINUAR ]..."
            [ "${opUser_Grup}" = true ] && clear
        fi
    done
}

###########################
## DESBLOQUEAR USUARIOS ##
#########################
function desUser() { clear
    echo -e "\e[0;36m[x]======================================[x]\e[0m"
    echo -e "\e[0;36m[x]\e[0m         \033[1;91m\033[5m\033[3mDesbloquear Usuarios\033[0m         \e[0;36m[x]\e[0m"
    echo -e "\e[0;36m[x]======================================[x]\e[0m"
    echo
    desUs=0
    
    while [ $desUs == "0" ]; do
        read -r -p "Nombre de usuario => " desUser
        aux3=$( cat /etc/passwd | grep $desUser | cut -d ":" -f1 )
        
        if [ -z $aux3 ]; then
            desUs=0
            echo -e "\033[4;35mEl usuario no es validos\e[0m"
            echo
            sleep 1s
            clear
            [ "${opUser_Grup}" = true ]
        else
            desUs=1
            usermod -U $desUser
            echo -e "\e[0;36m[+]\e[0m Se ha desbloqueado \033[46mexitosamente\033[0m el usuario ""$desUser"" \e[0;36m[+]\e[0m"
            read -n1 -p -r "Presione cualquier tecla para [ CONTINUAR ]..."
            [ "${opUser_Grup}" = true ] && clear
        fi
    done
}

while [ "$opUser_Grup" != 3 ]; do
    echo -e "\e[0;33m\033[1m*-------------------------*\e[0m"
    echo -e "\e[0;33m\033[1m|\e[0m 1. Bloquear Usuario     \e[0;33m\033[1m|\e[0m"
    echo -e "\e[0;33m\033[1m|\e[0m 2. Desbloquear Usuario  \e[0;33m\033[1m|\e[0m"
    echo -e "\e[0;33m\033[1m|\e[0m 3. \033[0;101m\033[1;97mVolver\033[0m               \e[0;33m\033[1m|\e[0m"
    echo -e "\e[0;33m\033[1m*-------------------------*\e[0m"
    read -r -p "=> " opUser_Grup
    echo
    
    case "${opUser_Grup}" in
        1)
            blockUser
        ;;

        2)
            desUser
        ;;
        
        3)
            unset "${opUser_Grup}" #[ unset ] borra la variable en memoria al salir de la funcion. 
            ( exec "./main.sh" )
            #Con el comando [ exec ] reemplaza al Shell sin crear un nuevo proceso. 
            #Sin embargo, podemos ponerlo en una SubShell, la cual usara 
            #un porcentaje de procesador y ram, para usar esto es 
            #quitando el comando [ exec ] y dejando solo los paréntesis y el path del main:
            #[ ( "./main.sh" ) ].
            #(La segunda opción es buena idea usarla en caso que se dese ejecutar tareas pesadas)
        ;;
        
        *)
            clear
            echo
            echo -e "\033[4;35mNo es una opcion lo que intentas\e[0m"
            echo
            sleep 2s
            clear
            [ "${opUser_Grup}" = true ]
        ;;
    esac
done